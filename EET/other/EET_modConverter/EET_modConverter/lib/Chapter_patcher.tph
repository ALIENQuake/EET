OUTER_SPRINT option ~~
OUTER_WHILE NOT (IS_AN_INT %option%) || (option > 2) || (option < 1) BEGIN
	PRINT ~Should the tool add EVALUATE_BUFFER to all COMPILE, EXTEND_, REPLACE_BCS_BLOCK, R_B_B weidu commands, if not already present?
 1. No (you will need to do it manually for scripts and dialogs that needs it)
 2. Yes (add EVALUATE_BUFFER everywhere if any script or dialog file needs it)~
	ACTION_READLN option
END

PRINT ~~
PRINT ~Patching chapters...~

OUTER_SET cntcurrent = 0
OUTER_SET ignore_cnt = 0
OUTER_SET patch_cnt = 0
OUTER_SPRINT log ~~
OUTER_SPRINT platformMATCH1 "ALWAYS
  ACTION_IF NOT VARIABLE_IS_SET bg2_chapter BEGIN
    ACTION_IF GAME_IS ~eet~ BEGIN
      OUTER_SET bg2_chapter = 12
    END ELSE BEGIN
      OUTER_SET bg2_chapter = 0
    END
    OUTER_FOR (i=1; i<=10; i=i+1) BEGIN
      OUTER_SET bg2_chapter = bg2_chapter + 1
      OUTER_SPRINT name_source ~bg2_chapter_%i%~
      OUTER_SET EVAL ~%name_source%~ = bg2_chapter
    END
  END
"

COPY - ~EET_modConverter/Filelist.txt~ ~.../Filelist.txt~
	REPLACE_TEXTUALLY ~%WNL%~ ~%LNL%~
	COUNT_REGEXP_INSTANCES ~^Input[/\\]+~ cntrow
	REPLACE_EVALUATE CASE_INSENSITIVE ~^Input[/\\]+\(.+\)$~ BEGIN
		SET cntcurrent = cntcurrent + 1
		INNER_PATCH_SAVE ~patch_name~ ~%MATCH1%~ BEGIN
			REPLACE_TEXTUALLY ~\\~ ~/~
		END
		INNER_PATCH_SAVE ~patch_ext~ ~%patch_name%~ BEGIN
			REPLACE_TEXTUALLY ~^.+\.~ ~~
		END
		INNER_PATCH_SAVE ~patch_dir~ ~%patch_name%~ BEGIN
			REPLACE_TEXTUALLY ~[^/]+$~ ~~
		END
		//PATCH_PRINT ~patch_name = %patch_name%; ;patch_dir = %patch_dir%; patch_ext = %patch_ext%~
		SET patched = 0
		INNER_ACTION BEGIN
			ACTION_IF ~%patch_ext%~ STR_EQ ~BAF~ OR
				~%patch_ext%~ STR_EQ ~D~ OR
				~%patch_ext%~ STR_EQ ~TP2~ OR
				~%patch_ext%~ STR_EQ ~TPA~ OR
				~%patch_ext%~ STR_EQ ~TPH~ OR
				~%patch_ext%~ STR_EQ ~TPP~ BEGIN
				COPY - ~EET_modConverter/Input/%patch_name%~ ~.../Output/%patch_name%~
					REPLACE_TEXTUALLY ~IncrementGlobal~ ~IncrementReplaceMe~ //we don't want to patch this one
					REPLACE_EVALUATE CASE_INSENSITIVE ~\([A-Za-z]*G[A-Za-z]*([ %TAB%]*"CHAPTER"[ %TAB%]*,?[ %TAB%]*"?G?L?O?B?A?L?"?[ %TAB%]*,[ %TAB%]*\)\([0-9]+\)[ %TAB%]*)~ BEGIN //this should take care of SetGlobal, Global, GlobalGT, GlobalLT, SG, G, GGT, GLT
						PATCH_IF (patched = 0) BEGIN
							PATCH_PRINT ~%cntcurrent%/%cntrow% Patching: %patch_name%...~
						END
						SPRINT log_temp ~Patching %patch_name%: %MATCH1%%MATCH2%) => %MATCH1%%bg2_chapter_%MATCH2%%)~
						SPRINT log ~%log%%log_temp%%LNL%~
						PATCH_PRINT ~%log_temp%~
						SET patched = 1
					END
					~%MATCH1%%bg2_chapter_%MATCH2%%)~
					REPLACE_TEXTUALLY ~IncrementReplaceMe~ ~IncrementGlobal~
			END
			ACTION_IF (patched = 0) BEGIN
				OUTER_SET ignore_cnt = ignore_cnt + 1
				PRINT ~%cntcurrent%/%cntrow% Ignoring patching: %patch_name%...~
			END ELSE BEGIN
				MKDIR ~EET_modConverter/Output/%patch_dir%~
				COPY ~.../Output/%patch_name%~ ~EET_modConverter/Output/%patch_name%~
				OUTER_SET patch_cnt = patch_cnt + 1
			END
		END
	END
	~~

ACTION_IF (patch_cnt > 0) BEGIN
	COPY - ~EET_modConverter/Filelist.txt~ ~.../Filelist.txt~
		REPLACE_TEXTUALLY ~%WNL%~ ~%LNL%~
		REPLACE_EVALUATE CASE_INSENSITIVE ~^Input[/\\]+\(.+\.tp[2hap]\)$~ BEGIN
			INNER_PATCH_SAVE ~patch_name~ ~%MATCH1%~ BEGIN
				REPLACE_TEXTUALLY ~\\~ ~/~
			END
			INNER_PATCH_SAVE ~patch_dir~ ~%patch_name%~ BEGIN
				REPLACE_TEXTUALLY ~[^/]+$~ ~~
			END
			SET patched = 0
			INNER_ACTION BEGIN
				ACTION_IF NOT FILE_EXISTS ~EET_modConverter/Output/%patch_name%~ BEGIN
					OUTER_SPRINT tp2_path ~Input~
				END ELSE BEGIN
					OUTER_SPRINT tp2_path ~Output~
				END
				COPY - ~EET_modConverter/%tp2_path%/%patch_name%~ ~.../Output/%patch_name%~
					PATCH_IF (~%SOURCE_EXT%~ STR_EQ ~tp2~) BEGIN
						COUNT_REGEXP_INSTANCES CASE_SENSITIVE ~AUTHOR~ valid
						PATCH_IF (valid > 0) BEGIN
							COUNT_REGEXP_INSTANCES ~^[ %TAB%]*ALWAYS[ %TAB%]*.*[ %TAB%]*$~ num_matches
							PATCH_IF (num_matches > 0) BEGIN
								REPLACE_EVALUATE CASE_SENSITIVE ~^\([ %TAB%]*ALWAYS\)~ BEGIN
									PATCH_IF (patched = 0) BEGIN
										SPRINT MATCH1 ~%platformMATCH1%~
										SET patched = 1
										SPRINT log_temp ~Patching %patch_name%: ALWAYS command expanded%LNL%%MATCH1%~
										SPRINT log ~%log%%log_temp%%LNL%~
										PATCH_PRINT ~%log_temp%~
									END
								END
								~%MATCH1%~
							END ELSE BEGIN
								REPLACE_EVALUATE CASE_SENSITIVE ~^\([ %TAB%]*LANGUAGE\)~ BEGIN
									PATCH_IF (patched = 0) BEGIN
										SPRINT MATCH1 ~%platformMATCH1%END%LNL%%LNL%%MATCH1%~
										SET patched = 1
										SPRINT log_temp ~Patching %patch_name%: ALWAYS command added%LNL%%MATCH1%~
										SPRINT log ~%log%%log_temp%%LNL%~
										PATCH_PRINT ~%log_temp%~
									END
								END
								~%MATCH1%~
								PATCH_IF (patched = 0) BEGIN
									REPLACE_EVALUATE CASE_SENSITIVE ~^\([ %TAB%]*BEGIN\)~ BEGIN
										PATCH_IF (patched = 0) BEGIN
											SPRINT MATCH1 ~%platformMATCH1%END%LNL%%LNL%%MATCH1%~
											SET patched = 1
											SPRINT log_temp ~Patching %patch_name%: ALWAYS command added%LNL%%MATCH1%~
											SPRINT log ~%log%%log_temp%%LNL%~
											PATCH_PRINT ~%log_temp%~
										END
									END
									~%MATCH1%~
								END
							END
						END
					END
					PATCH_IF (option = 2) BEGIN
						REPLACE_EVALUATE CASE_SENSITIVE ~^\([ %TAB%]*REPLACE_BCS_BLOCK\)\(.*\)$~ BEGIN
							PATCH_IF (~%MATCH2%~ STRING_CONTAINS_REGEXP ~EVAL~) BEGIN
								SPRINT log_temp ~Patching %patch_name%: %MATCH1%%MATCH2% => %MATCH1% EVALUATE_BUFFER%MATCH2%~
								SPRINT log ~%log%%log_temp%%LNL%~
								PATCH_PRINT ~%log_temp%~
								SET patched = 1
								SPRINT MATCH1 ~%MATCH1% EVALUATE_BUFFER~
							END
						END ~%MATCH1%%MATCH2%~
						REPLACE_EVALUATE CASE_SENSITIVE ~^\([ %TAB%]*R_B_B\)\(.*\)$~ BEGIN
							PATCH_IF (~%MATCH2%~ STRING_CONTAINS_REGEXP ~EVAL~) BEGIN
								SPRINT log_temp ~Patching %patch_name%: %MATCH1%%MATCH2% => %MATCH1% EVALUATE_BUFFER%MATCH2%~
								SPRINT log ~%log%%log_temp%%LNL%~
								PATCH_PRINT ~%log_temp%~
								SET patched = 1
								SPRINT MATCH1 ~%MATCH1% EVALUATE_BUFFER~
							END
						END ~%MATCH1%%MATCH2%~
						REPLACE_EVALUATE CASE_SENSITIVE ~^\([ %TAB%]*COMPILE\)\(.*\)$~ BEGIN
							PATCH_IF (~%MATCH2%~ STRING_CONTAINS_REGEXP ~EVAL~) AND (~%MATCH2%~ STRING_CONTAINS_REGEXP ~_BAF_TO_BCS~) AND (~%MATCH2%~ STRING_CONTAINS_REGEXP ~_D_TO_DLG~) BEGIN
								SPRINT log_temp ~Patching %patch_name%: %MATCH1%%MATCH2% => %MATCH1% EVALUATE_BUFFER%MATCH2%~
								SPRINT log ~%log%%log_temp%%LNL%~
								PATCH_PRINT ~%log_temp%~
								SET patched = 1
								SPRINT MATCH1 ~%MATCH1% EVALUATE_BUFFER~
							END
						END ~%MATCH1%%MATCH2%~
						REPLACE_EVALUATE CASE_SENSITIVE ~^\([ %TAB%]*EXTEND_\)\(.*\)$~ BEGIN
							PATCH_IF (~%MATCH2%~ STRING_CONTAINS_REGEXP ~EVAL~) BEGIN
								PATCH_IF ((~%MATCH2%~ STRING_CONTAINS_REGEXP ~USING~)=0) BEGIN
									SPRINT log_temp ~Patching %patch_name%: %MATCH1%%MATCH2% => ~
									INNER_PATCH_SAVE MATCH2 ~%MATCH2%~ BEGIN
										REPLACE_TEXTUALLY CASE_SENSITIVE ~USING~ ~EVALUATE_BUFFER USING~
									END
									SPRINT log_temp ~%log_temp%%MATCH1%%MATCH2%~
								END ELSE PATCH_IF ((~%MATCH2%~ STRING_CONTAINS_REGEXP ~//~)=0) BEGIN
									SPRINT log_temp ~Patching %patch_name%: %MATCH1%%MATCH2% => ~
									INNER_PATCH_SAVE MATCH2 ~%MATCH2%~ BEGIN
										REPLACE_TEXTUALLY CASE_SENSITIVE ~//~ ~EVALUATE_BUFFER //~
									END
									SPRINT log_temp ~%log_temp%%MATCH1%%MATCH2%~
								END ELSE BEGIN
									SPRINT log_temp ~Patching %patch_name%: %MATCH1%%MATCH2% => %MATCH1%%MATCH2% EVALUATE_BUFFER~
									SPRINT MATCH2 ~%MATCH2% EVALUATE_BUFFER~
								END
								SPRINT log ~%log%%log_temp%%LNL%~
								PATCH_PRINT ~%log_temp%~
								SET patched = 1
							END
						END ~%MATCH1%%MATCH2%~
					END
				ACTION_IF (patched = 1) BEGIN
					ACTION_IF (~%tp2_path%~ STR_EQ ~Input~) BEGIN
						OUTER_SET patch_cnt = patch_cnt + 1
						OUTER_SET ignore_cnt = ignore_cnt - 1
					END
					MKDIR ~EET_modConverter/Output/%patch_dir%~
					COPY ~.../Output/%patch_name%~ ~EET_modConverter/Output/%patch_name%~
					//OUTER_SET tp2_cnt = tp2_cnt + 1
				END
			END
		END
		~~
END

PRINT ~Conversion complete. Statistics:
%patch_cnt% files patched.
%ignore_cnt% files ignored.~
